{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/_guards/auth.guard.ts","webpack:///./src/app/_resolvers/listing-detail.resolver.ts","webpack:///./src/app/_resolvers/listings.resolver.ts","webpack:///./src/app/_resolvers/mylistings-edit.resolver.ts","webpack:///./src/app/_resolvers/mylistings.resolver.ts","webpack:///./src/app/_services/alertify.service.ts","webpack:///./src/app/_services/auth.service.ts","webpack:///./src/app/_services/errorinterceptor.ts","webpack:///./src/app/_services/geocode.service.ts","webpack:///./src/app/_services/listing.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/listingfolder/listing-card/listing-card.component.css","webpack:///./src/app/listingfolder/listing-card/listing-card.component.html","webpack:///./src/app/listingfolder/listing-card/listing-card.component.ts","webpack:///./src/app/listingfolder/listing-detail/listing-detail.component.css","webpack:///./src/app/listingfolder/listing-detail/listing-detail.component.html","webpack:///./src/app/listingfolder/listing-detail/listing-detail.component.ts","webpack:///./src/app/listingfolder/listings/listings.component.css","webpack:///./src/app/listingfolder/listings/listings.component.html","webpack:///./src/app/listingfolder/listings/listings.component.ts","webpack:///./src/app/listingfolder/mylistings-add/mylistings-add.component.css","webpack:///./src/app/listingfolder/mylistings-add/mylistings-add.component.html","webpack:///./src/app/listingfolder/mylistings-add/mylistings-add.component.ts","webpack:///./src/app/listingfolder/mylistings-edit/mylistings-edit.component.css","webpack:///./src/app/listingfolder/mylistings-edit/mylistings-edit.component.html","webpack:///./src/app/listingfolder/mylistings-edit/mylistings-edit.component.ts","webpack:///./src/app/listingfolder/mylistings/mylistings.component.css","webpack:///./src/app/listingfolder/mylistings/mylistings.component.html","webpack:///./src/app/listingfolder/mylistings/mylistings.component.ts","webpack:///./src/app/listingfolder/photo-editor/photo-editor.component.css","webpack:///./src/app/listingfolder/photo-editor/photo-editor.component.html","webpack:///./src/app/listingfolder/photo-editor/photo-editor.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/map/map.component.css","webpack:///./src/app/map/map.component.html","webpack:///./src/app/map/map.component.ts","webpack:///./src/app/nav/nav.component.css","webpack:///./src/app/nav/nav.component.html","webpack:///./src/app/nav/nav.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/routes.ts","webpack:///./src/app/value/value.component.css","webpack:///./src/app/value/value.component.html","webpack:///./src/app/value/value.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private authService: AuthService, private router: Router,\r\n    private alertifyService: AlertifyService) {}\r\n\r\n  canActivate(): boolean {\r\n    if (this.authService.loggedIn()) {\r\n      return true;\r\n    }\r\n    this.alertifyService.error('Please log in to view content');\r\n    this.router.navigate(['/home']);\r\n    return false;\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { ListingService } from '../_services/listing.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Listing } from '../_models/listing';\r\n\r\n\r\n@Injectable()\r\n\r\nexport class ListingDetailResolver implements Resolve<Listing> {\r\n    constructor(private listingService: ListingService, private router: Router,\r\n         private alertify: AlertifyService) {}\r\n    \r\n    resolve(route: ActivatedRouteSnapshot) : Observable<Listing> {\r\n        return this.listingService.getListing(route.params['id']).pipe(\r\n            catchError(error => {\r\n                this.alertify.error(error);\r\n                this.router.navigate(['/listings']);\r\n                return of(null);\r\n            })\r\n        );\r\n    }\r\n\r\n}","import {Injectable} from '@angular/core';\r\nimport { User } from '../_models/user';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { ListingService } from '../_services/listing.service';\r\nimport { Listing } from '../_models/listing';\r\n\r\n\r\n@Injectable()\r\n\r\nexport class ListingsResolver implements Resolve<Listing[]> {\r\n    \r\n    constructor(private listingService: ListingService, private router: Router,\r\n         private alertify: AlertifyService) {};\r\n    \r\n    resolve(route: ActivatedRouteSnapshot) : Observable<Listing[]> {\r\n        return this.listingService.getListings().pipe(\r\n            catchError(error => {\r\n                this.alertify.error('Problem retrieving data');\r\n                this.router.navigate(['/home']);\r\n                return of(null);\r\n            })\r\n        );\r\n    }\r\n\r\n}","import {Injectable} from '@angular/core';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { ListingService } from '../_services/listing.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Listing } from '../_models/listing';\r\n\r\n\r\n@Injectable()\r\n\r\nexport class MylistingsEditResolver implements Resolve<Listing> {\r\n    constructor(private listingService: ListingService, private router: Router,\r\n         private alertify: AlertifyService) {}\r\n    \r\n    resolve(route: ActivatedRouteSnapshot) : Observable<Listing> {\r\n        return this.listingService.getListing(route.params['id']).pipe(\r\n            catchError(error => {\r\n                this.alertify.error(error);\r\n                this.router.navigate(['/listings']);\r\n                return of(null);\r\n            })\r\n        );\r\n    }\r\n\r\n}","import {Injectable} from '@angular/core';\r\nimport { User } from '../_models/user';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { ListingService } from '../_services/listing.service';\r\nimport { Listing } from '../_models/listing';\r\nimport { AuthService } from '../_services/auth.service';\r\n\r\n\r\n@Injectable()\r\n\r\nexport class MylistingsResolver implements Resolve<Listing[]> {\r\n    \r\n    constructor(private listingService: ListingService, private router: Router,\r\n         private alertify: AlertifyService, private authService: AuthService) {};\r\n    \r\n    resolve(route: ActivatedRouteSnapshot) : Observable<Listing[]> {\r\n        return this.listingService.getUserListings(this.authService.decodedToken.nameid).pipe(\r\n            catchError(error => {\r\n                this.alertify.error('Problem retrieving data');\r\n                this.router.navigate(['/home']);\r\n                return of(null);\r\n            })\r\n        );\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\n\r\ndeclare let alertify: any;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AlertifyService {\r\n\r\nconstructor() { }\r\n\r\n  confirm(message: string, okCallback: () => any) {\r\n    alertify.confirm(message, function(e) {\r\n      if (e) {\r\n        okCallback();\r\n      } else{}\r\n    });\r\n  }\r\n\r\n  success(message: string) {\r\n    alertify.success(message);\r\n  }\r\n\r\n  error(message: string) {\r\n    alertify.error(message);\r\n  }\r\n\r\n  warning(message: string) {\r\n    alertify.warning(message);\r\n  }\r\n\r\n  message(message: string) {\r\n    alertify.message(message);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { User } from '../_models/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  baseUrl = environment.apiUrl + 'auth/';\r\n  jwtHelper = new JwtHelperService();\r\n  decodedToken: any;\r\n\r\nconstructor(private http: HttpClient) { }\r\n\r\n  login(model: any) {\r\n    return this.http.post(this.baseUrl + 'login', model)\r\n    .pipe(\r\n      map((response: any) => {\r\n        const user = response;\r\n        if (user) {\r\n          localStorage.setItem('token', user.token);\r\n          this.decodedToken = this.jwtHelper.decodeToken(user.token);\r\n        }\r\n      })\r\n    )\r\n  }\r\n\r\n  register(user: User) {\r\n    return this.http.post(this.baseUrl + 'register', user);\r\n  }\r\n\r\n  loggedIn() {\r\n    const token = localStorage.getItem('token');\r\n    return !this.jwtHelper.isTokenExpired(token);\r\n  }\r\n}\r\n","import { catchError } from 'rxjs/operators';\r\nimport { throwError, Observable } from 'rxjs';\r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpErrorResponse, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\n\r\nexport class Errorinterceptor implements HttpInterceptor {\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(req).pipe(\r\n            catchError(error => {\r\n                if (error instanceof HttpErrorResponse) {\r\n                    if (error.status === 401) {\r\n                        return throwError(error.statusText);\r\n                    }\r\n                    const applicationError = error.headers.get('Application-Error');\r\n                    if (applicationError) {\r\n                        console.error(applicationError);\r\n                        return throwError(applicationError);\r\n                    }\r\n                    const serverError = error.error.errors || error.error;\r\n                    let modalStateErrors = '';\r\n                    if (serverError && typeof serverError === 'object') {\r\n                        for (const key in serverError) {\r\n                            if (serverError[key]) {\r\n                                modalStateErrors += serverError[key] + '\\n';\r\n                            }\r\n                        }\r\n                    }\r\n                    return throwError(modalStateErrors || serverError || 'Server Error');\r\n                }\r\n            })\r\n        );\r\n    }\r\n}\r\n\r\nexport const ErrorinterceptorProvide = {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: Errorinterceptor,\r\n    multi: true\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GeocodeService {\r\n\r\nconstructor(private http: HttpClient) { }\r\n\r\ngetcoords(address) {\r\n  return this.http.get('http://open.mapquestapi.com/geocoding/v1/address?key=nxy2SKBDidHing8LIkHMRJ6FrzEo3ZjR&location=' + address);\r\n}\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { Listing } from '../_models/listing';\r\nimport { User } from '../_models/user';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ListingService {\r\n  baseUrl = environment.apiUrl;\r\n  \r\n\r\nconstructor(private http: HttpClient) { }\r\n  getUsers(id): Observable<User> {\r\n    return this.http.get<User>(this.baseUrl + 'users/' + id);\r\n  }\r\n\r\n  getListings(): Observable<Listing[]> {\r\n    return this.http.get<Listing[]>(this.baseUrl + 'listings');\r\n  }\r\n\r\n  getUserListings(userid): Observable<Listing[]> {\r\n    return this.http.get<Listing[]>(this.baseUrl + 'listings/mylistings/' + userid);\r\n  }\r\n\r\n  getListing(id): Observable<Listing> {\r\n    return this.http.get<Listing>(this.baseUrl + 'listings/' + id);\r\n  }\r\n\r\n  addlisting(listing: Listing) {\r\n    return this.http.post(this.baseUrl + 'listings/', listing);\r\n  }\r\n\r\n  updatelisting(id: number, listing: Listing) {\r\n    return this.http.put(this.baseUrl + 'listings/' + id, listing);\r\n  }\r\n\r\n  setMainPhoto(listingId: number, id: number) {\r\n    return this.http.post(this.baseUrl + 'listings/' + listingId + '/photos/' + id + '/setMain', {});\r\n  }\r\n\r\n  deletePhoto(listingId: number, id: number) {\r\n    return this.http.delete(this.baseUrl + 'listings/' + listingId + '/photos/' + id);\r\n  }\r\n\r\n  deleteListing(listingId: number) {\r\n    return this.http.delete(this.baseUrl + 'listings/' + listingId);\r\n  }\r\n\r\n}\r\n","module.exports = \"#map{\\r\\n    height: 1000px;\\r\\n    width: 100%;\\r\\n}\"","module.exports = \"<app-nav></app-nav>\\r\\n<router-outlet></router-outlet>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { AuthService } from './_services/auth.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  jwtHelper = new JwtHelperService();\r\n  \r\n  constructor(private authService: AuthService) {}\r\n\r\n  ngOnInit() {\r\n\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      this.authService.decodedToken = this.jwtHelper.decodeToken(token);\r\n    }\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BsDropdownModule, TabsModule } from 'ngx-bootstrap';\r\nimport { AgmCoreModule } from '@agm/core';\r\nimport { NgxGalleryModule } from 'ngx-gallery';\r\nimport { AppComponent } from './app.component';\r\nimport { ValueComponent } from './value/value.component';\r\nimport { NavComponent } from './nav/nav.component';\r\nimport { AuthService } from './_services/auth.service';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { ErrorinterceptorProvide } from './_services/errorinterceptor';\r\nimport { AlertifyService } from './_services/alertify.service';\r\nimport { MapComponent } from './map/map.component';\r\nimport { ListingsComponent } from './listingfolder/listings/listings.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FileUploadModule } from 'ng2-file-upload';\r\nimport { appRoutes } from './routes';\r\nimport { AuthGuard } from './_guards/auth.guard';\r\nimport { ListingService } from './_services/listing.service';\r\nimport { ListingCardComponent } from './listingfolder/listing-card/listing-card.component';\r\nimport { JwtModule } from '@auth0/angular-jwt';\r\nimport { ListingDetailComponent } from './listingfolder/listing-detail/listing-detail.component';\r\nimport { ListingDetailResolver } from './_resolvers/listing-detail.resolver';\r\nimport { ListingsResolver } from './_resolvers/listings.resolver';\r\nimport { MylistingsComponent } from './listingfolder/mylistings/mylistings.component';\r\nimport { MylistingsResolver } from './_resolvers/mylistings.resolver';\r\nimport { MylistingsAddComponent } from './listingfolder/mylistings-add/mylistings-add.component';\r\nimport { PhotoEditorComponent } from './listingfolder/photo-editor/photo-editor.component';\r\nimport { MylistingsEditComponent } from './listingfolder/mylistings-edit/mylistings-edit.component';\r\nimport { MylistingsEditResolver } from './_resolvers/mylistings-edit.resolver';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { GeocodeService } from './_services/geocode.service';\r\n\r\nexport function tokenGetter() {\r\n   return localStorage.getItem('token');\r\n}\r\n\r\n@NgModule({\r\n   declarations: [\r\n      AppComponent,\r\n      ValueComponent,\r\n      NavComponent,\r\n      HomeComponent,\r\n      RegisterComponent,\r\n      MapComponent,\r\n      ListingsComponent,\r\n      ListingCardComponent,\r\n      ListingDetailComponent,\r\n      MylistingsComponent,\r\n      MylistingsAddComponent,\r\n      MylistingsEditComponent,\r\n      PhotoEditorComponent,\r\n      LoginComponent\r\n   ],\r\n   imports: [\r\n      BrowserModule,\r\n      HttpClientModule,\r\n      FormsModule,\r\n      BsDropdownModule.forRoot(),\r\n      TabsModule.forRoot(),\r\n      RouterModule.forRoot(appRoutes),\r\n      JwtModule.forRoot({\r\n         config: {\r\n            tokenGetter: tokenGetter,\r\n            whitelistedDomains: ['localhost:5001'],\r\n            blacklistedRoutes: ['localhost:5001/api/auth']\r\n         }\r\n      }),\r\n      NgxGalleryModule,\r\n      FileUploadModule,\r\n      ReactiveFormsModule,\r\n      AgmCoreModule.forRoot({\r\n         apiKey: 'AIzaSyCHdRPgIRJpcEHmKMeP0T5uLLd1-HL4q28'\r\n      })\r\n   ],\r\n   providers: [\r\n      AuthService,\r\n      ErrorinterceptorProvide,\r\n      AlertifyService,\r\n      AuthGuard,\r\n      ListingService,\r\n      ListingDetailResolver,\r\n      ListingsResolver,\r\n      MylistingsResolver,\r\n      MylistingsEditResolver,\r\n      GeocodeService\r\n   ],\r\n   bootstrap: [\r\n      AppComponent\r\n   ]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container mt-5\\\">\\r\\n  <div *ngIf=\\\"!registerMode\\\" style=\\\"text-align: center\\\">\\r\\n    <h1>Welcome to Quiklease!</h1>\\r\\n    <p class=\\\"lead\\\">Login or Register to view and post listings!</p>\\r\\n    <div class=\\\"text-center\\\">\\r\\n      <button class=\\\"btn btn-primary btn-lg mr-2\\\" (click)=\\\"registerToggle()\\\">Register</button>\\r\\n    </div>  \\r\\n  </div>\\r\\n\\r\\n  <div *ngIf=\\\"registerMode\\\" class=\\\"container\\\">\\r\\n      <div class=\\\"row justify-content-center\\\">\\r\\n        <div class=\\\"col-6\\\">\\r\\n          <app-register (cancelRegister)=\\\"cancelRegisterMode($event)\\\"></app-register>\\r\\n        </div>\\r\\n      </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  registerMode = false;\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  registerToggle() {\r\n    this.registerMode = !this.registerMode;\r\n  }\r\n\r\n  cancelRegisterMode(registerMode: boolean) {\r\n    this.registerMode = registerMode;\r\n  }\r\n\r\n}\r\n","module.exports = \".card:hover img {\\r\\n    -webkit-transform: scale(1.03, 1.03);\\r\\n            transform: scale(1.03, 1.03);\\r\\n    transition-duration: 500ms;\\r\\n    transition-timing-function: ease-out;\\r\\n    opacity:0.7;\\r\\n}\\r\\n\\r\\n.card img {\\r\\n    -webkit-transform: scale(1.0, 1.0);\\r\\n            transform: scale(1.0, 1.0);\\r\\n    transition-duration: 500ms;\\r\\n    transition-timing-function: ease-out;\\r\\n}\\r\\n\\r\\n.card-img-wrapper {\\r\\n    overflow: hidden;\\r\\n    position:relative;\\r\\n}\\r\\n\\r\\n.member-icons {\\r\\n    position:absolute;\\r\\n    bottom: -30%;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    opacity: 0;\\r\\n}\\r\\n\\r\\n.card-img-wrapper:hover .member-icons{\\r\\n    bottom: 0;\\r\\n    opacity: 1;\\r\\n}\\r\\n\\r\\n.animate {\\r\\n    transition: all 0.3s ease-in-out;\\r\\n}\\r\\n\\r\\n.leasetype {\\r\\n    background-color: white;\\r\\n    color: #1672e2 !important;\\r\\n    border: 2px solid #1672e2 !important;\\r\\n}\\r\\n\\r\\n.listingbutton {\\r\\n    width: 100%;\\r\\n    border-radius: 5px;\\r\\n    padding-top: 5px;\\r\\n    padding-bottom: 5px;\\r\\n}\\r\\n\\r\\n.listingbutton a {\\r\\n    text-decoration: none;\\r\\n    color:black !important;\\r\\n}\\r\\n\\r\\n.listingbutton a:hover {\\r\\n        \\r\\n        text-decoration: none;\\r\\n        color: black !important;\\r\\n    }\\r\\n\\r\\n.favorite {\\r\\n    border: 2px solid pink;\\r\\n}\\r\\n\\r\\n.message {\\r\\n    border: 2px solid orange;\\r\\n}\\r\\n\\r\\n.view {\\r\\n    border: 2px solid #25e025;\\r\\n}\\r\\n\\r\\n.card {\\r\\n    padding-left: 20px;\\r\\n    padding-right: 20px;\\r\\n    padding-bottom:6px;\\r\\n}\\r\\n\\r\\n.title {\\r\\n    font-size:1.2em;\\r\\n}\"","module.exports = \"<h2> Current Job Postings</h2>\\r\\n<div class=\\\"card\\\">\\r\\n     <div class=\\\"row mt-1\\\"> \\r\\n        <div class=\\\"col-md-2 rightcol\\\">\\r\\n            <img style=\\\"height: 120px; width: 160px;\\\" [src]=\\\"listing.photoUrl == null?  '../../../../../assets/default.jpg' : listing.photoUrl\\\" class=\\\"card-img-top\\\">\\r\\n          </div>\\r\\n         <div class=\\\"col-md-5\\\">\\r\\n             <a style=\\\"font-size:1.1em\\\" target=\\\"_blank\\\" title=\\\"{{listing.title}}\\\" [routerLink]=\\\"['/listings/', listing.id]\\\"> {{listing.title}}</a><br>\\r\\n             <p class=\\\"text-primary\\\">{{listing.address}}<br /></p>\\r\\n             <p class=\\\"text-primary\\\"><button type=\\\"button\\\" class=\\\"leasetype\\\">Lease </button> &nbsp; {{listing.rentFrom | date}} - {{listing.rentUntil | date}}</p>\\r\\n         </div>\\r\\n         <div class=\\\"col-md-2 mt-1 text-success\\\">\\r\\n           <h5>{{listing.price | currency}} / Mo</h5>\\r\\n         </div>\\r\\n         <div class=\\\"col-md-3 mt-1 rightcol border-left\\\">\\r\\n            <div class=\\\"text-left\\\"> \\r\\n                <button [routerLink]=\\\"['/listings/', listing.id]\\\" class=\\\"listingbutton bg-white view\\\"> \\r\\n                    \\r\\n                    <i class=\\\"fa fa-eye text-success \\\"></i>\\r\\n                    View Details\\r\\n                </button>\\r\\n                <button class=\\\"listingbutton mt-1 bg-white message\\\"> \\r\\n                    \\r\\n                    <i class=\\\"fa fa-envelope text-warning \\\"></i> Message User\\r\\n                </button>\\r\\n                <button class=\\\"listingbutton mt-1 bg-white favorite\\\"> \\r\\n                    <i class=\\\"fa fa-heart text-danger\\\"></i>\\r\\n                    <a target=\\\"_blank\\\" title=\\\"Message Lister\\\" [routerLink]=\\\"['/listings/', listing.id]\\\"> Favourite This</a>\\r\\n                </button>\\r\\n            </div>\\r\\n      </div>\\r\\n     </div>\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Listing } from 'src/app/_models/listing';\r\n\r\n@Component({\r\n  selector: 'app-listing-card',\r\n  templateUrl: './listing-card.component.html',\r\n  styleUrls: ['./listing-card.component.css']\r\n})\r\nexport class ListingCardComponent implements OnInit {\r\n  @Input() listing: Listing;\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \".tab-panel {\\r\\n    font-size: 1.2em;\\r\\n}\"","module.exports = \"<div class=\\\"container mt-4\\\">\\r\\n      <h2>{{listing.title}}</h2><br>\\r\\n      <h4>{{listing.address}}</h4>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-4\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n          <img class=\\\"card-img-top img-thumbnail\\\" \\r\\n          [src]=\\\"numberphotos==0? '../../../assets/default.jpg' : listing.photoUrl\\\">\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <div>\\r\\n              <h5>Posted {{listing.postedDate | date}} by {{user.fullName}}</h5>\\r\\n              <h5>Email seller at {{user.userName}}</h5>\\r\\n            </div>\\r\\n            <div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"card-footer\\\">\\r\\n            <div class=\\\"btn-group d-flex\\\">\\r\\n              <button class=\\\"btn btn-primary w-100\\\">Like</button>\\r\\n              <button class=\\\"btn btn-success w-100\\\">Message</button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n  \\r\\n      <div class=\\\"col-sm-8\\\">\\r\\n        <div class=\\\"tab-panel\\\">\\r\\n          <tabset class=\\\"member-tabset\\\">\\r\\n            <tab heading=\\\"About this listing:\\\">\\r\\n              <p>{{listing.description}}</p>\\r\\n              <h4 class=\\\"mt-2 text-primary\\\">Details</h4>\\r\\n              <i class=\\\"fa fa-map-marker\\\"></i>&nbsp;<strong>Address: </strong> {{listing.address}}<br><br>\\r\\n              <i class=\\\"fa fa-dollar\\\"></i>&nbsp;<strong>Price: </strong> {{listing.price | currency }}<br><br>\\r\\n              <i class=\\\"fa fa-calendar\\\"></i>&nbsp;<strong>Rental Period: </strong> {{listing.rentFrom | date}} - {{listing.rentUntil | date}}<br><br>\\r\\n              \\r\\n              <i class=\\\"fa fa-user\\\"></i>&nbsp;<strong>Rooms available: </strong> {{listing.roomsAvailable}} &nbsp;&nbsp;\\r\\n              <i class=\\\"{{listing.buildingType == 'House'? 'fa fa-home' : 'fa fa-building'}}\\\"></i><strong>Building Type: </strong> {{listing.buildingType}}\\r\\n            </tab>\\r\\n            <tab heading=\\\"Photos\\\">\\r\\n              <h4>Photos</h4>\\r\\n              <ngx-gallery [options]=\\\"galleryOptions\\\" [images]=\\\"galleryImages\\\"></ngx-gallery>\\r\\n\\r\\n            </tab>\\r\\n            <tab heading=\\\"Messages\\\">\\r\\n                <h4>Messages here</h4>\\r\\n              </tab>\\r\\n          </tabset>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Listing } from 'src/app/_models/listing';\r\nimport { ListingService } from 'src/app/_services/listing.service';\r\nimport { AlertifyService } from 'src/app/_services/alertify.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { NgxGalleryAnimation, NgxGalleryOptions, NgxGalleryImage } from 'ngx-gallery';\r\nimport { User } from 'src/app/_models/user';\r\nimport { AuthService } from 'src/app/_services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-listing-detail',\r\n  templateUrl: './listing-detail.component.html',\r\n  styleUrls: ['./listing-detail.component.css']\r\n})\r\nexport class ListingDetailComponent implements OnInit {\r\n  listing: Listing;\r\n  galleryOptions: NgxGalleryOptions[];\r\n  galleryImages: NgxGalleryImage[];\r\n  numberphotos: number;\r\n  user: User;\r\n  constructor(private listingService: ListingService,\r\n              private authService: AuthService,\r\n              private alertify: AlertifyService,\r\n              private route: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    this.route.data.subscribe(data => {\r\n      this.listing = data['listing'];\r\n    });\r\n    this.listingService.getUsers(this.listing.userId).subscribe((userresult)=> {\r\n      this.user = userresult;\r\n    }, error => {\r\n      this.alertify.error(error);\r\n    })\r\n    this.galleryOptions = [\r\n      {\r\n        width: '500px',\r\n        height: '500px',\r\n        imagePercent: 100,\r\n        thumbnailsColumns: 4,\r\n        imageAnimation: NgxGalleryAnimation.Slide,\r\n        preview: false\r\n      }\r\n    ];\r\n    this.galleryImages = this.getImages();\r\n  }\r\n\r\n  getImages() {\r\n    const imageUrls = [];\r\n    for (let i=0; i< this.listing.photos.length; i++) {\r\n      imageUrls.push({\r\n        small:this.listing.photos[i].photoUrl,\r\n        medium:this.listing.photos[i].photoUrl,\r\n        big:this.listing.photos[i].photoUrl,\r\n        description: ''\r\n      });\r\n    }\r\n    this.numberphotos = imageUrls.length;\r\n    \r\n    return imageUrls;\r\n  }\r\n  \r\n\r\n  /*\r\n  loadListing() {\r\n    this.listingService.getListing(this.route.snapshot.params['id'])\r\n    .subscribe((listing: Listing) => {\r\n      this.listing = listing;\r\n    }, error => {\r\n      this.alertify.error(error);\r\n    })\r\n  }\r\n  */\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"\\r\\n<div class=\\\"container\\\">\\r\\n      <div *ngFor=\\\"let listing of listings\\\" style=\\\"color:white;\\\">\\r\\n        <app-listing-card [listing]=\\\"listing\\\"></app-listing-card>\\r\\n\\r\\n      </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Listing } from '../../_models/listing';\r\nimport { ListingService } from '../../_services/listing.service';\r\nimport { AlertifyService } from '../../_services/alertify.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { User } from 'src/app/_models/user';\r\nimport { AuthService } from 'src/app/_services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-listings',\r\n  templateUrl: './listings.component.html',\r\n  styleUrls: ['./listings.component.css']\r\n})\r\nexport class ListingsComponent implements OnInit {\r\n  listings: Listing[];\r\n  user: User;\r\n  constructor(private listingService: ListingService,\r\n              private alertify: AlertifyService,\r\n              private authService: AuthService,\r\n              private route: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    this.route.data.subscribe(data => {\r\n      this.listings = data['listings'];\r\n    });\r\n    \r\n    \r\n  }\r\n\r\n  /*\r\n  loadListings() {\r\n    this.listingService.getListings().subscribe((listings: Listing[]) => {\r\n      this.listings = listings;\r\n    }, error => {\r\n      this.alertify.error(error);\r\n    });\r\n  }\r\n  */\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-2\\\"></div>\\r\\n  <div class=\\\"col-md-8\\\">\\r\\n      <form class=\\\"addformclass\\\" [formGroup]=\\\"addForm\\\" (ngSubmit)=\\\"addformlisting()\\\">\\r\\n          <h2 class=\\\"text-center text-primary mt-3\\\">Add New Listing</h2>\\r\\n          <hr>\\r\\n      \\r\\n      \\r\\n          <div class=\\\"mt-3\\\">\\r\\n            <label for=\\\"title\\\">Listing Title</label>\\r\\n            <div class=\\\"input-group\\\">\\r\\n                <input type=\\\"text\\\" \\r\\n                [ngClass]=\\\"{'is-invalid' : addForm.get('title').errors && addForm.get('title').touched}\\\"\\r\\n                class=\\\"form-control\\\" \\r\\n                formControlName=\\\"title\\\" \\r\\n                placeholder=\\\"Listing Title\\\">\\r\\n                <div class=\\\"invalid-feedback\\\"> Please choose a listing title</div>\\r\\n            </div>\\r\\n          </div>\\r\\n      \\r\\n          <div class=\\\"mt-3\\\">\\r\\n              <label for=\\\"username\\\">Listing Description</label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                  <textarea\\r\\n                  rows=\\\"5\\\"\\r\\n                  [ngClass]=\\\"{'is-invalid' : addForm.get('description').errors && addForm.get('description').touched}\\\"\\r\\n                  class=\\\"form-control\\\" \\r\\n                  formControlName=\\\"description\\\" \\r\\n                  placeholder=\\\"Listing Description\\\"></textarea>\\r\\n                  <div class=\\\"invalid-feedback\\\"> Please enter a description</div>\\r\\n              </div>\\r\\n            </div>\\r\\n      \\r\\n            <div class=\\\"mt-3\\\">\\r\\n                <label for=\\\"username\\\">Listing Address</label>\\r\\n                <div class=\\\"input-group\\\">\\r\\n                    <input type=\\\"text\\\" \\r\\n                    [ngClass]=\\\"{'is-invalid' : addForm.get('address').errors && addForm.get('address').touched}\\\"\\r\\n                    class=\\\"form-control\\\" \\r\\n                    formControlName=\\\"address\\\" \\r\\n                    placeholder=\\\"Eg. 102 Seagram Drive, Waterloo ON\\\">\\r\\n                  <div class=\\\"invalid-feedback\\\" style=\\\"width: 100%;\\\">\\r\\n                    Listing address is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n            </div>\\r\\n      \\r\\n            <div class=\\\"row mt-3\\\">\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                  <label for=\\\"email\\\">Tenant move in date</label>\\r\\n                  <div class=\\\"input-group\\\">\\r\\n                      <div class=\\\"input-group-prepend\\\">\\r\\n                        <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-calendar\\\"></i></span>\\r\\n                      </div>\\r\\n                      <input type=\\\"date\\\" \\r\\n                    [ngClass]=\\\"{'is-invalid' : addForm.get('rentFrom').errors && addForm.get('rentFrom').touched}\\\"\\r\\n                    class=\\\"form-control\\\" \\r\\n                    formControlName=\\\"rentFrom\\\" \\r\\n                    >\\r\\n                  <div class=\\\"invalid-feedback\\\" style=\\\"width: 100%;\\\">\\r\\n                    Move in date is required.\\r\\n                  </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                  <label for=\\\"address\\\">Tenant move out date</label>\\r\\n                  <div class=\\\"input-group\\\">\\r\\n                      <div class=\\\"input-group-prepend\\\">\\r\\n                        <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-calendar\\\"></i></span>\\r\\n                      </div>\\r\\n                      <input type=\\\"date\\\" \\r\\n                        [ngClass]=\\\"{'is-invalid' : addForm.get('rentUntil').errors && addForm.get('rentUntil').touched}\\\"\\r\\n                        class=\\\"form-control\\\" \\r\\n                        formControlName=\\\"rentUntil\\\" \\r\\n                        >\\r\\n                      <div class=\\\"invalid-feedback\\\" style=\\\"width: 100%;\\\">\\r\\n                        Move out date is required.\\r\\n                      </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n              </div>\\r\\n      \\r\\n              <div class=\\\"row mt-3\\\">\\r\\n                  <div class=\\\"col-md-5 mb-3\\\">\\r\\n                    <label for=\\\"buildingType\\\">Building Type</label>\\r\\n                    <select formControlName=\\\"buildingType\\\"\\r\\n                    [ngClass]=\\\"{'is-invalid' : addForm.get('buildingType').errors && addForm.get('buildingType').touched}\\\"\\r\\n                    class=\\\"custom-select d-block w-100\\\">\\r\\n                      <option value=\\\"Apartment / Condominium\\\">Apartment / Condominium</option>\\r\\n                      <option value=\\\"Detached House\\\">Detached House</option>\\r\\n                      <option value=\\\"Semi-Detached House\\\">Semi-Detached House</option>\\r\\n                      <option value=\\\"Townhouse\\\">Townhouse</option>\\r\\n                    </select>\\r\\n                    <div class=\\\"invalid-feedback\\\">\\r\\n                        Please select a building type\\r\\n                      </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-4 mb-3\\\">\\r\\n                    <label for=\\\"state\\\">Price per month</label>\\r\\n                    <input \\r\\n                    type=\\\"number\\\" \\r\\n                    class=\\\"form-control\\\" \\r\\n                    [ngClass]=\\\"{'is-invalid' : addForm.get('price').errors && addForm.get('price').touched}\\\"\\r\\n                    formControlName=\\\"price\\\">\\r\\n                    <div class=\\\"invalid-feedback\\\">\\r\\n                      Please provide a price\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-3 mb-3\\\">\\r\\n                    <label for=\\\"zip\\\">Rooms for Rent</label>\\r\\n                    <input \\r\\n                    type=\\\"number\\\" \\r\\n                    class=\\\"form-control\\\" \\r\\n                    [ngClass]=\\\"{'is-invalid' : addForm.get('roomsAvailable').errors && addForm.get('roomsAvailable').touched}\\\"\\r\\n                    formControlName=\\\"roomsAvailable\\\">\\r\\n                    <div class=\\\"invalid-feedback\\\">\\r\\n                      Please provide rooms available\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n      \\r\\n                <h4 class=\\\"mt-3\\\">Your Contact Information</h4><br>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6 mb-3\\\">\\r\\n                    <label for=\\\"address2\\\">Your Phone Number <span class=\\\"text-muted\\\">(Optional)</span></label>\\r\\n                    <input \\r\\n                    type=\\\"text\\\" \\r\\n                    class=\\\"form-control\\\" \\r\\n                    [ngClass]=\\\"{'is-invalid' : addForm.get('phone').errors && addForm.get('phone').touched}\\\"\\r\\n                    formControlName=\\\"phone\\\">\\r\\n                    <div class=\\\"invalid-feedback\\\">\\r\\n                      Please provide a phone number\\r\\n                    </div>\\r\\n                  </div>\\r\\n              </div>\\r\\n              <hr class=\\\"mb-4\\\">\\r\\n              <button class=\\\"btn btn-success btn-lg btn-block mb-12\\\" [disabled]=\\\"!addForm.valid\\\" type=\\\"submit\\\">ADD LISTING</button>\\r\\n              \\r\\n      </form>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-2\\\"></div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from 'src/app/_services/auth.service';\r\nimport { AlertifyService } from 'src/app/_services/alertify.service';\r\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Listing } from 'src/app/_models/listing';\r\nimport { ListingService } from 'src/app/_services/listing.service';\r\n\r\n@Component({\r\n  selector: 'app-mylistings-add',\r\n  templateUrl: './mylistings-add.component.html',\r\n  styleUrls: ['./mylistings-add.component.css']\r\n})\r\nexport class MylistingsAddComponent implements OnInit {\r\n  listing: Listing;\r\n  addForm: FormGroup;\r\n  constructor(private listingService: ListingService, \r\n    private alertifyService: AlertifyService,\r\n    private fb: FormBuilder,\r\n    private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.createaddlistingsform();\r\n  }\r\n\r\n  createaddlistingsform() {\r\n    this.addForm = this.fb.group({\r\n      address: ['', Validators.required],\r\n      phone: [''],\r\n      title: ['', Validators.required],\r\n      description: ['', Validators.required],\r\n      rentFrom: ['', Validators.required],\r\n      rentUntil: ['', Validators.required],\r\n      price: ['', Validators.required],\r\n      buildingType: ['', Validators.required],\r\n      roomsAvailable: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  addformlisting() {\r\n    if (this.addForm.valid) {\r\n      this.listing = Object.assign({}, this.addForm.value);\r\n      this.listingService.addlisting(this.listing).subscribe(() => {\r\n        this.router.navigate(['/mylistings']);\r\n        this.alertifyService.success('Added new listing. Click edit to add photos!');\r\n      }, error => {\r\n        this.alertifyService.error(error);\r\n      }\r\n      );\r\n    }\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container mt-4\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-4\\\">\\r\\n          <h1>Your Profile</h1>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-8\\\">\\r\\n        <div *ngIf=\\\"editForm.dirty\\\" class=\\\"alert alert-info\\\">\\r\\n          <strong>Information:</strong>You have made changes. Any unsaved changes will be lost.\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-4\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <div>\\r\\n              <strong>Age:</strong>\\r\\n              <p>\\r\\n                {{listing.address}}\\r\\n              </p>\\r\\n            </div>\\r\\n            <div>\\r\\n              <strong>Last Active:</strong>\\r\\n              <p>\\r\\n                {{listing.rentFrom}}\\r\\n              </p>\\r\\n            </div>\\r\\n            <div>\\r\\n              <strong>Member since:</strong>\\r\\n              <p>\\r\\n                {{listing.rentUntil}}\\r\\n              </p>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"card-footer\\\">\\r\\n              <button [disabled]=\\\"!editForm.dirty\\\" form=\\\"editForm\\\" class=\\\"btn btn-success btn-block\\\">Save Changes</button>\\r\\n              \\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n  \\r\\n      <div class=\\\"col-sm-8\\\">\\r\\n        <div class=\\\"tab-panel\\\">\\r\\n          <tabset class=\\\"member-tabset\\\">\\r\\n            <tab heading=\\\"Edit Profile\\\">\\r\\n              <form #editForm=\\\"ngForm\\\" id=\\\"editForm\\\" (ngSubmit)=\\\"updateListing()\\\">\\r\\n                  <h4>Description</h4>\\r\\n                  <textarea name=\\\"description\\\" class=\\\"form-control\\\" rows=\\\"6\\\" \\r\\n                  [(ngModel)]=\\\"listing.description\\\"></textarea>\\r\\n    \\r\\n              \\r\\n                  <h4>Location Details:</h4>\\r\\n                  <div class=\\\"form-inline\\\">\\r\\n                    \\r\\n                    <label for=\\\"address\\\">address</label>\\r\\n                    <input type=\\\"text\\\" name=\\\"address\\\" [(ngModel)]=\\\"listing.address\\\" class=\\\"form-control\\\">\\r\\n                  </div>\\r\\n                  <div class=\\\"form-inline\\\">\\r\\n                      \\r\\n\\r\\n                      <label for=\\\"title\\\">title</label>\\r\\n                      <input type=\\\"text\\\" name=\\\"title\\\" [(ngModel)]=\\\"listing.title\\\" class=\\\"form-control\\\">\\r\\n                      <label for=\\\"phone\\\">phone</label>\\r\\n                      <input type=\\\"text\\\" name=\\\"phone\\\" [(ngModel)]=\\\"listing.phone\\\" class=\\\"form-control\\\">\\r\\n                    </div>\\r\\n                </form>\\r\\n            </tab>\\r\\n            <tab heading=\\\"Edit Photos\\\">\\r\\n              <app-photo-editor [photos]=\\\"listing.photos\\\" [listingId]=\\\"listing.id\\\"></app-photo-editor>\\r\\n            </tab>\\r\\n          </tabset>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Listing } from 'src/app/_models/listing';\r\nimport { AlertifyService } from 'src/app/_services/alertify.service';\r\nimport { ListingService } from 'src/app/_services/listing.service';\r\nimport { AuthService } from 'src/app/_services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-mylistings-edit',\r\n  templateUrl: './mylistings-edit.component.html',\r\n  styleUrls: ['./mylistings-edit.component.css']\r\n})\r\nexport class MylistingsEditComponent implements OnInit {\r\n  @ViewChild('editForm') editForm: NgForm;\r\n  listing: Listing;\r\n\r\n  constructor(private route: ActivatedRoute,\r\n    private alertify: AlertifyService,\r\n    private listingService: ListingService,\r\n    private authService: AuthService) { }\r\n\r\n  ngOnInit() {\r\n    this.route.data.subscribe(data => {\r\n      this.listing = data ['listing'];\r\n    });\r\n  }\r\n\r\n  updateListing() {\r\n    this.listingService.updatelisting(this.listing.id, this.listing).subscribe(next => {\r\n      this.alertify.success(\"Profile updated.\");\r\n      this.editForm.reset(this.listing);\r\n    }, error => {\r\n      this.alertify.error(error);\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-2\\\"></div>\\r\\n  <div class=\\\"col-md-8\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-10\\\">\\r\\n          <h2 class=\\\"text-primary mt-3\\\">My Listings</h2>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-2\\\">\\r\\n        <br>\\r\\n          <button class=\\\"btn btn-primary align-text-bottom\\\" [routerLink]=\\\"['/add']\\\">Add Listing</button>\\r\\n      </div>\\r\\n    </div>\\r\\n \\r\\n    <div class=\\\"row mt-3\\\">\\r\\n          <table class=\\\"table table-bordered mytable\\\">\\r\\n              <thead>\\r\\n                  <tr>\\r\\n                      <th>Listing Title</th>\\r\\n                      <th>Address</th>\\r\\n                      <th>Actions</th>\\r\\n                  </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr *ngFor=\\\"let listing of listings\\\">\\r\\n                      <td>{{listing.title}}</td>\\r\\n                      <td>{{listing.address}}</td>\\r\\n                      <td>\\r\\n                        <button class=\\\"btn btn-primary\\\" \\r\\n                        [routerLink]=\\\"['/mylistings/', listing.id]\\\"><i class=\\\"fa fa-pencil\\\"></i> Edit</button>\\r\\n                        &nbsp;\\r\\n                        <button class=\\\"btn btn-primary\\\" \\r\\n                        (click)=\\\"deleteListing(listing.id)\\\"><i class=\\\"fa fa-trash\\\"></i> Delete</button>            \\r\\n                      </td>\\r\\n                  </tr>      \\r\\n              </tbody>\\r\\n          </table>\\r\\n    </div>\\r\\n  <div class=\\\"col-md-2\\\"></div>\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Listing } from 'src/app/_models/listing';\r\nimport { AuthService } from 'src/app/_services/auth.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ListingService } from 'src/app/_services/listing.service';\r\nimport { AlertifyService } from 'src/app/_services/alertify.service';\r\n\r\n@Component({\r\n  selector: 'app-mylistings',\r\n  templateUrl: './mylistings.component.html',\r\n  styleUrls: ['./mylistings.component.css']\r\n})\r\nexport class MylistingsComponent implements OnInit {\r\n  listings: Listing[];\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private authService: AuthService,\r\n    private listingService: ListingService,\r\n    private alertify: AlertifyService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getuserlistings();\r\n    console.log(this.authService.decodedToken.nameid);\r\n  }\r\n\r\n  getuserlistings() {\r\n    this.route.data.subscribe(data => {\r\n      this.listings = data['listings'];\r\n    });\r\n    console.log(this.listings);\r\n\r\n  }\r\n\r\n  deleteListing(id) {\r\n    this.alertify.confirm(\"Do you wish to delete this listing?\", () => {\r\n      this.listingService.deleteListing(id).subscribe(() => {\r\n        this.listings.splice(this.listings.findIndex(l => l.id == id), 1);\r\n        this.alertify.success(\"Listing has been deleted\");\r\n      }, error => {\r\n        this.alertify.error(error);\r\n      })\r\n    })\r\n  }\r\n\r\n}\r\n","module.exports = \"img.img-thumbnail {\\r\\n    height: 100px;\\r\\n    min-width: 100px !important;\\r\\n}\\r\\n\\r\\n.nv-file-over {\\r\\n    border:dotted 3px red;\\r\\n}\\r\\n\\r\\ninput[type=file] {\\r\\n    color: transparent;\\r\\n}\"","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm-2\\\" *ngFor=\\\"let photo of photos\\\">\\r\\n    <img src=\\\"{{photo.photoUrl}}\\\" class=\\\"img-thumbnail p-1\\\">\\r\\n    <div class=\\\"text-center\\\">\\r\\n      <button type=\\\"button\\\" \\r\\n      (click)=\\\"setMainPhoto(photo)\\\"\\r\\n      [disabled]=\\\"photo.isMain\\\"\\r\\n      [ngClass]=\\\"photo.isMain ? 'btn-success active' : 'btn-default'\\\"\\r\\n      type=\\\"button\\\"\\r\\n      class=\\\"btn btn-sm\\\">Main</button>\\r\\n      <button type=\\\"button\\\" \\r\\n      (click)=\\\"deletePhoto(photo.id)\\\"\\r\\n      [disabled]=\\\"photo.isMain\\\"\\r\\n      class=\\\"btn btn-sm btn-danger\\\"><i class=\\\"fa fa-trash\\\"></i></button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n \\r\\n    <div class=\\\"col-md-3\\\">\\r\\n\\r\\n        <h3>Select files</h3>\\r\\n\\r\\n        <div ng2FileDrop\\r\\n             [ngClass]=\\\"{'nv-file-over': hasBaseDropZoneOver}\\\"\\r\\n             (fileOver)=\\\"fileOverBase($event)\\\"\\r\\n             [uploader]=\\\"uploader\\\"\\r\\n             class=\\\"card bg-faded p-3 text-center mb-3 my-drop-zone\\\">\\r\\n             <i class=\\\"fa fa-upload fa-3x\\\"></i>\\r\\n            Drop Photos Here\\r\\n        </div>\\r\\n\\r\\n\\r\\n        Multiple\\r\\n        <input type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" multiple  /><br/>\\r\\n\\r\\n        Single\\r\\n        <input type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" />\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-md-9\\\" style=\\\"margin-bottom: 40px\\\" *ngIf=\\\"uploader?.queue.length\\\">\\r\\n\\r\\n        <h3>Upload queue</h3>\\r\\n        <p>Queue length: {{ uploader?.queue?.length }}</p>\\r\\n\\r\\n        <table class=\\\"table\\\">\\r\\n            <thead>\\r\\n            <tr>\\r\\n                <th width=\\\"50%\\\">Name</th>\\r\\n                <th>Size</th>\\r\\n                <th>Progress</th>\\r\\n                <th>Status</th>\\r\\n                <th>Actions</th>\\r\\n            </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n            <tr *ngFor=\\\"let item of uploader.queue\\\">\\r\\n                <td><strong>{{ item?.file?.name }}</strong></td>\\r\\n                <td *ngIf=\\\"uploader.options.isHTML5\\\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\\r\\n                <td *ngIf=\\\"uploader.options.isHTML5\\\">\\r\\n                    <div class=\\\"progress\\\" style=\\\"margin-bottom: 0;\\\">\\r\\n                        <div class=\\\"progress-bar\\\" role=\\\"progressbar\\\" [ngStyle]=\\\"{ 'width': item.progress + '%' }\\\"></div>\\r\\n                    </div>\\r\\n                </td>\\r\\n                <td class=\\\"text-center\\\">\\r\\n                    <span *ngIf=\\\"item.isSuccess\\\"><i class=\\\"glyphicon glyphicon-ok\\\"></i></span>\\r\\n                    <span *ngIf=\\\"item.isCancel\\\"><i class=\\\"glyphicon glyphicon-ban-circle\\\"></i></span>\\r\\n                    <span *ngIf=\\\"item.isError\\\"><i class=\\\"glyphicon glyphicon-remove\\\"></i></span>\\r\\n                </td>\\r\\n                <td nowrap>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-success btn-xs\\\"\\r\\n                            (click)=\\\"item.upload()\\\" [disabled]=\\\"item.isReady || item.isUploading || item.isSuccess\\\">\\r\\n                        <span class=\\\"glyphicon glyphicon-upload\\\"></span> Upload\\r\\n                    </button>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-warning btn-xs\\\"\\r\\n                            (click)=\\\"item.cancel()\\\" [disabled]=\\\"!item.isUploading\\\">\\r\\n                        <span class=\\\"glyphicon glyphicon-ban-circle\\\"></span> Cancel\\r\\n                    </button>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-danger btn-xs\\\"\\r\\n                            (click)=\\\"item.remove()\\\">\\r\\n                        <span class=\\\"glyphicon glyphicon-trash\\\"></span> Remove\\r\\n                    </button>\\r\\n                </td>\\r\\n            </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n\\r\\n        <div>\\r\\n            <div>\\r\\n                Queue progress:\\r\\n                <div class=\\\"progress\\\" style=\\\"\\\">\\r\\n                    <div class=\\\"progress-bar\\\" role=\\\"progressbar\\\" [ngStyle]=\\\"{ 'width': uploader.progress + '%' }\\\"></div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-success btn-s\\\"\\r\\n                    (click)=\\\"uploader.uploadAll()\\\" [disabled]=\\\"!uploader.getNotUploadedItems().length\\\">\\r\\n                <span class=\\\"glyphicon glyphicon-upload\\\"></span> Upload all\\r\\n            </button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-warning btn-s\\\"\\r\\n                    (click)=\\\"uploader.cancelAll()\\\" [disabled]=\\\"!uploader.isUploading\\\">\\r\\n                <span class=\\\"glyphicon glyphicon-ban-circle\\\"></span> Cancel all\\r\\n            </button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-danger btn-s\\\"\\r\\n                    (click)=\\\"uploader.clearQueue()\\\" [disabled]=\\\"!uploader.queue.length\\\">\\r\\n                <span class=\\\"glyphicon glyphicon-trash\\\"></span> Remove all\\r\\n            </button>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n</div>\"","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\r\nimport { Photo } from 'src/app/_models/photo';\r\nimport { AlertifyService } from 'src/app/_services/alertify.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { FileUploader } from 'ng2-file-upload';\r\nimport { AuthService } from 'src/app/_services/auth.service';\r\nimport { ListingService } from 'src/app/_services/listing.service';\r\n\r\n@Component({\r\n  selector: 'app-photo-editor',\r\n  templateUrl: './photo-editor.component.html',\r\n  styleUrls: ['./photo-editor.component.css']\r\n})\r\nexport class PhotoEditorComponent implements OnInit {\r\n  @Input() photos: Photo[];\r\n  @Input() listingId: number;\r\n\r\n  @Output() getMemberPhotoChange = new EventEmitter<string>();\r\n\r\n  baseUrl = environment.apiUrl;\r\n  currentmain: Photo;\r\n  public uploader: FileUploader;\r\n  public hasBaseDropZoneOver: boolean = false;\r\n  constructor(private authService: AuthService,\r\n    private listingService: ListingService,\r\n    private alertify: AlertifyService) { }\r\n\r\n  ngOnInit() {\r\n    this.initializeuploader();\r\n  }\r\n\r\n  fileOverBase(e:any):void {\r\n    this.hasBaseDropZoneOver = e;\r\n  }\r\n\r\n  initializeuploader() {\r\n    this.uploader = new FileUploader({\r\n      url: this.baseUrl + 'listings/' + this.listingId + '/photos',\r\n      authToken: 'Bearer ' + localStorage.getItem('token'),\r\n      isHTML5: true,\r\n      allowedFileType: ['image'],\r\n      removeAfterUpload: true,\r\n      autoUpload: false,\r\n      maxFileSize: 10*1024*1024\r\n    });\r\n\r\n    this.uploader.onAfterAddingFile = (file) => {file.withCredentials = false;}\r\n\r\n    this.uploader.onSuccessItem = (item, response, status, headers) => {\r\n      if (response) {\r\n        const res: Photo = JSON.parse(response);\r\n        const photo = {\r\n          id: res.id,\r\n          photoUrl: res.photoUrl,\r\n          dateAdded: res.dateAdded,\r\n          isMain: res.isMain\r\n        };\r\n        this.photos.push(photo);\r\n      }\r\n    }\r\n  }\r\n\r\n  setMainPhoto(photo: Photo) {\r\n    this.listingService.setMainPhoto(this.listingId, photo.id)\r\n    .subscribe(() => {\r\n      this.currentmain = this.photos.filter(p => p.isMain == true)[0];\r\n      this.currentmain.isMain = false;\r\n      photo.isMain = true;\r\n    }, error => {\r\n      this.alertify.error(error);\r\n    })\r\n  }\r\n\r\n  deletePhoto(id: number) {\r\n    this.alertify.confirm(\"Do you wish to delete this photo?\", () => {\r\n      this.listingService.deletePhoto(this.listingId, id).subscribe(() => {\r\n        this.photos.splice(this.photos.findIndex(p => p.id == id), 1);\r\n        this.alertify.success(\"Photo has been deleted\");\r\n      }, error => {\r\n        this.alertify.error(error);\r\n      })\r\n    })\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"\\r\\n<form *ngIf=\\\"!loggedIn()\\\" #loginForm=\\\"ngForm\\\" class=\\\"form-inline my-2 my-lg-0\\\" (ngSubmit)=\\\"login()\\\">  \\r\\n    \\r\\n    <input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" name=\\\"username\\\" \\r\\n    placeholder=\\\"Username\\\" required [(ngModel)]=\\\"model.username\\\">\\r\\n    \\r\\n    <input class=\\\"form-control mr-sm-2\\\" type=\\\"password\\\" name=\\\"password\\\"\\r\\n    placeholder=\\\"Password\\\" required [(ngModel)]=\\\"model.password\\\">\\r\\n\\r\\n    <button [disabled]=\\\"!loginForm.valid\\\" class=\\\"btn btn-success my-2 my-sm-0\\\" type=\\\"submit\\\">Login</button>\\r\\n  \\r\\n  </form>\\r\\n\\r\\n  <div class=\\\"login-form\\\">\\r\\n      <form *ngIf=\\\"!loggedIn()\\\" #loginForm=\\\"ngForm\\\" class=\\\"form-inline my-2 my-lg-0\\\" (ngSubmit)=\\\"login()\\\">\\r\\n          <h2 class=\\\"text-center\\\">Log in</h2>       \\r\\n          <div class=\\\"form-group\\\">\\r\\n              <input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" name=\\\"username\\\" \\r\\n    placeholder=\\\"Username\\\" required [(ngModel)]=\\\"model.username\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n              <input class=\\\"form-control mr-sm-2\\\" type=\\\"password\\\" name=\\\"password\\\"\\r\\n    placeholder=\\\"Password\\\" required [(ngModel)]=\\\"model.password\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n              <button [disabled]=\\\"!loginForm.valid\\\" class=\\\"btn btn-success my-2 my-sm-0\\\" type=\\\"submit\\\">Login</button>\\r\\n  \\r\\n          </div>\\r\\n      </form>\\r\\n      <p class=\\\"text-center\\\"><a href=\\\"#\\\">Create an Account</a></p>\\r\\n  </div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  model: any = {};\r\n  constructor(public authService: AuthService, private alertifyService: AlertifyService,\r\n    private router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  login() {\r\n    this.authService.login(this.model).subscribe(next => {\r\n      this.router.navigate(['/listings']);\r\n      this.alertifyService.success('Logged in successfully');\r\n    }, error => {\r\n      this.alertifyService.error(error);\r\n    });\r\n  }\r\n\r\n  loggedIn() {\r\n    return this.authService.loggedIn();\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"agm-map {\\r\\n    height:500px;\\r\\n}\"","module.exports = \"<h2 class=\\\"text-primary text-center\\\">Map of All Listings</h2>\\r\\n<agm-map [zoom]=\\\"14\\\" [latitude]=\\\"latitude\\\" [longitude]=\\\"longitude\\\">\\r\\n  <agm-marker *ngFor=\\\"let marker of locations\\\" [label]=\\\"mylabel\\\" [latitude]=\\\"marker.latitude\\\" [longitude]=\\\"marker.longitude\\\">\\r\\n      <agm-info-window>\\r\\n          <a target='_blank' href='/listings/{{marker.urlid}}'><strong>{{marker.title}}</strong></a><br>\\r\\n          {{marker.address}}\\r\\n        </agm-info-window>\\r\\n  </agm-marker>\\r\\n</agm-map>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { GeocodeService } from '../_services/geocode.service';\r\nimport { ListingService } from '../_services/listing.service';\r\nimport { Listing } from '../_models/listing';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Marker } from '../_models/marker';\r\n\r\n\r\n@Component({\r\n  selector: 'app-map',\r\n  templateUrl: './map.component.html',\r\n  styleUrls: ['./map.component.css']\r\n})\r\nexport class MapComponent implements OnInit {\r\n  listings: Listing[];\r\n  locations: Marker[] = [];\r\n  latitude = 43.4723;\r\n  longitude = -80.5449;\r\n  mylabel= \"🏠\";\r\n  baseUrl = environment.apiUrl;\r\n  constructor(private coordservice: GeocodeService, private listingservice: ListingService, private route: ActivatedRoute) { }\r\n\r\n  \r\n\r\n  \r\n\r\n  ngOnInit() {\r\n    this.route.data.subscribe(data => {\r\n      this.listings = data['listings'];\r\n    });\r\n\r\nthis.getcoords();\r\n\r\n  }\r\n\r\n  getcoords() {\r\n    this.listings.forEach(element => {\r\n      this.coordservice.getcoords(element.address).subscribe((results) => {\r\n        this.getlocation(element, results);\r\n      }, error => {\r\n        console.log(error);\r\n      })\r\n    });\r\n  }\r\n\r\n  getlocation(element, results) {\r\n    this.locations.push({\r\n      'title': element.title,\r\n      'address' : element.address,\r\n      'latitude' : results.results[0].locations[0].latLng.lat,\r\n      'longitude' : results.results[0].locations[0].latLng.lng,\r\n      'urlid' : element.id\r\n    });\r\n  }\r\n\r\n  \r\n\r\n}\r\n","module.exports = \".logoutclass:hover {\\r\\n    cursor:pointer;\\r\\n}\"","module.exports = \"<nav class=\\\" navbar navbar-expand-md navbar-dark bg-dark\\\" id=\\\"navbarsExampleDefault\\\">\\r\\n    \\r\\n        <a *ngIf=\\\"!loggedIn()\\\" class=\\\"nav-link\\\" [routerLink]=\\\"['/']\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\r\\n\\r\\n        <ul *ngIf=\\\"loggedIn()\\\" class=\\\"navbar-nav mr-auto\\\">\\r\\n      <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/listings']\\\"  >Listings</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/map']\\\">Map</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\r\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/mylistings']\\\">My Postings</a>\\r\\n        </li>\\r\\n            \\r\\n\\r\\n    </ul>\\r\\n\\r\\n    <a *ngIf=\\\"loggedIn()\\\" class=\\\"btn btn-success py-2 text-light mr-2\\\" [routerLink]=\\\"['/add']\\\">Add Listing</a>\\r\\n    <div *ngIf=\\\"loggedIn()\\\" class=\\\"dropdown\\\" dropdown>\\r\\n      <a class=\\\"dropdown-toggle text-light\\\" dropdownToggle>\\r\\n        Welcome {{authService.decodedToken?.unique_name}}\\r\\n      </a>\\r\\n      <div class=\\\"dropdown-menu\\\" *dropdownMenu>\\r\\n        <a class=\\\"dropdown-item logoutclass\\\" (click)=\\\"logout()\\\"><i class=\\\"fa fa-sign-out\\\"></i>Logout</a>\\r\\n      </div>\\r\\n    </div>\\r\\n    \\r\\n\\r\\n    <form *ngIf=\\\"!loggedIn()\\\" #loginForm=\\\"ngForm\\\" class=\\\"form-inline my-2 my-lg-0\\\" (ngSubmit)=\\\"login()\\\">  \\r\\n    \\r\\n      <input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" name=\\\"username\\\" \\r\\n      placeholder=\\\"Username\\\" required [(ngModel)]=\\\"model.username\\\">\\r\\n      \\r\\n      <input class=\\\"form-control mr-sm-2\\\" type=\\\"password\\\" name=\\\"password\\\"\\r\\n      placeholder=\\\"Password\\\" required [(ngModel)]=\\\"model.password\\\">\\r\\n  \\r\\n      <button [disabled]=\\\"!loginForm.valid\\\" class=\\\"btn btn-success my-2 my-sm-0\\\" type=\\\"submit\\\">Login</button>\\r\\n    \\r\\n    </form>\\r\\n  </nav>\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Router } from '@angular/router';\r\nimport { ListingService } from '../_services/listing.service';\r\n\r\n@Component({\r\n  selector: 'app-nav',\r\n  templateUrl: './nav.component.html',\r\n  styleUrls: ['./nav.component.css']\r\n})\r\nexport class NavComponent implements OnInit {\r\n  model: any = {};\r\n  constructor(public authService: AuthService, private alertifyService: AlertifyService,\r\n    private listingService: ListingService,\r\n    private router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  login() {\r\n    this.authService.login(this.model).subscribe(next => {\r\n      this.router.navigate(['/listings']);\r\n      this.alertifyService.success('Logged in successfully');\r\n    }, error => {\r\n      this.alertifyService.error(error);\r\n    });\r\n  }\r\n\r\n  loggedIn() {\r\n    return this.authService.loggedIn();\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem('token');\r\n    this.alertifyService.message('Logged out');\r\n    this.router.navigate(['/']);\r\n  }\r\n\r\n}\r\n","module.exports = \".myform {\\r\\n    float:center;\\r\\n    background-color: lightblue;\\r\\n    padding:50px;\\r\\n    width: 500px; \\r\\n    box-shadow: 0px 6px 18px 5px rgba(0,0,0,0.58);\\r\\n}\"","module.exports = \"<div class=\\\"login-form\\\">\\r\\n<form class=\\\"myform\\\" [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"register()\\\">\\r\\n  <h2 class=\\\"text-center\\\">Register</h2>\\r\\n  <p class=\\\"hint-text text-center\\\">Create your account. It's free and only takes a minute.</p>\\r\\n          \\r\\n    \\r\\n    \\r\\n    <div class=\\\"form-group\\\">\\r\\n        <input type=\\\"email\\\" \\r\\n        [ngClass]=\\\"{'is-invalid' : registerForm.get('userName').errors && registerForm.get('userName').touched}\\\"\\r\\n        class=\\\"form-control\\\" \\r\\n        formControlName=\\\"userName\\\" \\r\\n        placeholder=\\\"Email\\\">\\r\\n        <div class=\\\"invalid-feedback\\\"> Please enter a valid email</div>\\r\\n    \\r\\n      </div>\\r\\n  \\r\\n      <div class=\\\"form-group\\\">\\r\\n          <input type=\\\"text\\\" \\r\\n          [ngClass]=\\\"{'is-invalid' : registerForm.get('fullName').errors && registerForm.get('fullName').touched}\\\"\\r\\n          class=\\\"form-control\\\" \\r\\n          formControlName=\\\"fullName\\\" \\r\\n          placeholder=\\\"Full Name\\\">\\r\\n          <div class=\\\"invalid-feedback\\\"> Please enter your full name</div>\\r\\n      \\r\\n        </div>\\r\\n    \\r\\n    \\r\\n      <div class=\\\"form-group\\\">\\r\\n        <input type=\\\"password\\\" \\r\\n        [ngClass]=\\\"{'is-invalid' : registerForm.get('password').errors && registerForm.get('password').touched}\\\"\\r\\n        class=\\\"form-control\\\" \\r\\n        formControlName=\\\"password\\\" \\r\\n        placeholder=\\\"Password\\\">\\r\\n        <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('password').hasError('required') && registerForm.get('password').touched\\\"> Password is required</div>\\r\\n        <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('password').hasError('minlength') && registerForm.get('password').touched\\\"> Password must have at least 4 characters</div>\\r\\n        <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('password').hasError('maxlength') && registerForm.get('password').touched\\\"> Password cannot exceed 18 characters</div>\\r\\n    \\r\\n      </div>\\r\\n    \\r\\n      <div class=\\\"form-group\\\">\\r\\n        <input type=\\\"password\\\" \\r\\n        [ngClass]=\\\"{'is-invalid' : \\r\\n        registerForm.get('confirmPassword').errors && registerForm.get('confirmPassword').touched ||\\r\\n        registerForm.get('confirmPassword').touched && registerForm.hasError('mismatch')}\\\"\\r\\n        class=\\\"form-control\\\" \\r\\n        formControlName=\\\"confirmPassword\\\" \\r\\n        placeholder=\\\"Confirm Password\\\">\\r\\n        <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('confirmPassword').hasError('required') \\r\\n        && registerForm.get('confirmPassword').touched\\\"> Confirm password is required</div>\\r\\n        <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.hasError('mismatch') \\r\\n        && registerForm.get('confirmPassword').touched\\\"> Passwords must match</div>\\r\\n        \\r\\n      </div>\\r\\n    \\r\\n    \\r\\n      <div class=\\\"form-group text-center\\\">\\r\\n        <button class=\\\"btn btn-success btn-block\\\" [disabled]=\\\"!registerForm.valid\\\" type=\\\"submit\\\">Register</button>\\r\\n        \\r\\n        <button class=\\\"btn btn-primary btn-block\\\" type=\\\"button\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n      </div>\\r\\n      <p class=\\\"text-center\\\"><a href=\\\"#\\\">Already have an account? Log in</a></p>\\r\\n  </form>\\r\\n  .\\r\\n</div>\\r\\n\\r\\n  \"","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup, FormControl } from '@angular/forms';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { User } from '../_models/user';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  @Output() cancelRegister = new EventEmitter();\r\n\r\n  user: User;\r\n  registerForm: FormGroup;\r\n  constructor(private authService: AuthService, \r\n    private alertifyService: AlertifyService,\r\n    private fb: FormBuilder,\r\n    private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.createRegisterForm();\r\n  }\r\n\r\n  createRegisterForm() {\r\n    this.registerForm = this.fb.group({\r\n      userName: ['', Validators.required],\r\n      fullName: ['', Validators.required],\r\n      password: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(18)]],\r\n      confirmPassword: ['', Validators.required]\r\n    }, {validator: this.passwordMatchValidator});\r\n  }\r\n\r\n  passwordMatchValidator(g: FormGroup) {\r\n    return g.get('password').value === g.get('confirmPassword').value ? null: {'mismatch':true};\r\n  }\r\n\r\n  register() {\r\n    if (this.registerForm.valid) {\r\n      this.user = Object.assign({}, this.registerForm.value);\r\n      this.authService.register(this.user).subscribe(() => {\r\n        this.alertifyService.success('Registration Successful');\r\n      }, error => {\r\n        this.alertifyService.error(error);\r\n      }, () => {\r\n        this.authService.login(this.user).subscribe(() => {\r\n          this.router.navigate(['/listings']);\r\n        });\r\n      });\r\n    }\r\n    \r\n  }\r\n\r\n  cancel() {\r\n    this.cancelRegister.emit(false);\r\n    this.alertifyService.message('Cancelled Registration');\r\n  }\r\n\r\n\r\n}\r\n","import { Routes } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { ListingsComponent } from './listingfolder/listings/listings.component';\r\nimport { MapComponent } from './map/map.component';\r\nimport { AuthGuard } from './_guards/auth.guard';\r\nimport { ListingCardComponent } from './listingfolder/listing-card/listing-card.component';\r\nimport { ListingDetailComponent } from './listingfolder/listing-detail/listing-detail.component';\r\nimport { ListingDetailResolver } from './_resolvers/listing-detail.resolver';\r\nimport { ListingsResolver } from './_resolvers/listings.resolver';\r\nimport { MylistingsComponent } from './listingfolder/mylistings/mylistings.component';\r\nimport { MylistingsResolver } from './_resolvers/mylistings.resolver';\r\nimport { MylistingsAddComponent } from './listingfolder/mylistings-add/mylistings-add.component';\r\nimport { MylistingsEditComponent } from './listingfolder/mylistings-edit/mylistings-edit.component';\r\nimport { MylistingsEditResolver } from './_resolvers/mylistings-edit.resolver';\r\nimport { LoginComponent } from './login/login.component';\r\n\r\nexport const appRoutes: Routes = [\r\n    { path: '', component: HomeComponent},\r\n    { path: 'login', component: LoginComponent},\r\n    { path: 'listings', component: ListingsComponent, canActivate: [AuthGuard], resolve: {listings: ListingsResolver}},\r\n    { path: 'listings/:id', component: ListingDetailComponent, canActivate: [AuthGuard], resolve: {listing: ListingDetailResolver}},\r\n    { path: 'mylistings', component: MylistingsComponent, canActivate: [AuthGuard], resolve: {listings: MylistingsResolver}},\r\n    { path: 'mylistings/:id', component: MylistingsEditComponent, canActivate: [AuthGuard], resolve: {listing: MylistingsEditResolver}},\r\n    { path: 'add', component: MylistingsAddComponent, canActivate: [AuthGuard]},\r\n    { path: 'map', component: MapComponent, canActivate: [AuthGuard], resolve: {listings: ListingsResolver}},\r\n    { path: '**', redirectTo: 'home', pathMatch: 'full'}\r\n]","module.exports = \"\"","module.exports = \"<p *ngFor=\\\"let value of values\\\">\\r\\n  {{value.id}}, {{value.name}}\\r\\n</p>\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-value',\r\n  templateUrl: './value.component.html',\r\n  styleUrls: ['./value.component.css']\r\n})\r\nexport class ValueComponent implements OnInit {\r\n  values: any;\r\n  constructor(private http: HttpClient) { }\r\n\r\n  ngOnInit() {\r\n    this.getValues();\r\n  }\r\n\r\n  getValues() {\r\n    this.http.get('http://localhost:5001/api/values')\r\n    .subscribe(response => {\r\n      this.values = response;\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n    \r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'http://localhost:5001/api/'\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}